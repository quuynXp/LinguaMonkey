-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.badges
(
    badge_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    badge_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    image_url character varying(255) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT badges_pkey PRIMARY KEY (badge_id),
    CONSTRAINT badges_badge_name_key UNIQUE (badge_name)
);

COMMENT ON TABLE public.badges
    IS 'Lưu trữ huy hiệu cho thành tích của người dùng';

CREATE TABLE IF NOT EXISTS public.character3ds
(
    character3d_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    character3d_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    model_url character varying(255) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT character3ds_pkey PRIMARY KEY (character3d_id),
    CONSTRAINT character3ds_character3d_name_key UNIQUE (character3d_name)
);

COMMENT ON TABLE public.character3ds
    IS 'Lưu trữ mô hình nhân vật 3D cho ảnh đại diện người dùng';

CREATE TABLE IF NOT EXISTS public.chat_messages
(
    chat_message_id uuid NOT NULL,
    content text COLLATE pg_catalog."default",
    media_url character varying(2083) COLLATE pg_catalog."default",
    message_type message_type NOT NULL,
    room_id uuid NOT NULL,
    sender_id uuid NOT NULL,
    is_read boolean NOT NULL DEFAULT false,
    is_deleted boolean NOT NULL DEFAULT false,
    sent_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT unique_chat_message_id_sent_at PRIMARY KEY (chat_message_id, sent_at)
);

COMMENT ON TABLE public.chat_messages
    IS 'Lưu trữ tin nhắn trò chuyện với phân vùng theo sent_at';

CREATE TABLE IF NOT EXISTS public.couples
(
    user1_id uuid NOT NULL,
    user2_id uuid NOT NULL,
    status couple_status NOT NULL DEFAULT 'pending'::couple_status,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT couples_pkey PRIMARY KEY (user1_id, user2_id)
);

COMMENT ON TABLE public.couples
    IS 'Lưu trữ các cặp người dùng để học tập theo cặp';

CREATE TABLE IF NOT EXISTS public.course_discounts
(
    discount_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    course_id uuid NOT NULL,
    discount_percentage integer NOT NULL,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    is_active boolean NOT NULL DEFAULT true,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT course_discounts_pkey PRIMARY KEY (discount_id)
);

COMMENT ON TABLE public.course_discounts
    IS 'Lưu trữ giảm giá khóa học';

CREATE TABLE IF NOT EXISTS public.course_enrollments
(
    enrollment_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    course_id uuid NOT NULL,
    user_id uuid NOT NULL,
    enrolled_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    completed_at timestamp with time zone,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT course_enrollments_pkey PRIMARY KEY (enrollment_id)
);

COMMENT ON TABLE public.course_enrollments
    IS 'Lưu trữ đăng ký khóa học';

CREATE TABLE IF NOT EXISTS public.course_reviews
(
    review_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    course_id uuid NOT NULL,
    user_id uuid NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    rating numeric(3, 1) NOT NULL,
    comment text COLLATE pg_catalog."default",
    reviewed_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT course_reviews_pkey PRIMARY KEY (review_id)
);

COMMENT ON TABLE public.course_reviews
    IS 'Lưu trữ đánh giá khóa học';

CREATE TABLE IF NOT EXISTS public.courses
(
    course_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    thumbnail_url character varying(255) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT courses_pkey PRIMARY KEY (course_id)
);

COMMENT ON TABLE public.courses
    IS 'Lưu trữ các khóa học';

CREATE TABLE IF NOT EXISTS public.friendships
(
    user1_id uuid NOT NULL,
    user2_id uuid NOT NULL,
    status friendship_status NOT NULL DEFAULT 'pending'::friendship_status,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT friendships_pkey PRIMARY KEY (user1_id, user2_id)
);

COMMENT ON TABLE public.friendships
    IS 'Lưu trữ các mối quan hệ bạn bè và yêu cầu kết bạn';

CREATE TABLE IF NOT EXISTS public.group_answers
(
    group_answer_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    group_session_id uuid,
    lesson_question_id uuid,
    user_id uuid,
    selected_option character varying(255) COLLATE pg_catalog."default",
    is_correct boolean NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    answered_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT group_answers_pkey PRIMARY KEY (group_answer_id)
);

COMMENT ON TABLE public.group_answers
    IS 'Lưu trữ câu trả lời trong phiên học nhóm';

CREATE TABLE IF NOT EXISTS public.group_sessions
(
    group_session_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_id uuid,
    room_id uuid,
    user_id uuid,
    is_deleted boolean NOT NULL DEFAULT false,
    started_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ended_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT group_sessions_pkey PRIMARY KEY (group_session_id)
);

COMMENT ON TABLE public.group_sessions
    IS 'Lưu trữ các phiên học nhóm';

CREATE TABLE IF NOT EXISTS public.invalidated_tokens
(
    token character varying(512) COLLATE pg_catalog."default" NOT NULL,
    expiry_time timestamp with time zone NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT invalidated_tokens_pkey PRIMARY KEY (token)
);

COMMENT ON TABLE public.invalidated_tokens
    IS 'Lưu trữ các token xác thực đã bị vô hiệu hóa';

CREATE TABLE IF NOT EXISTS public.languages
(
    language_code character varying(2) COLLATE pg_catalog."default" NOT NULL,
    language_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT languages_pkey PRIMARY KEY (language_code),
    CONSTRAINT languages_language_name_key UNIQUE (language_name)
);

COMMENT ON TABLE public.languages
    IS 'Lưu trữ các ngôn ngữ được hỗ trợ bởi ứng dụng';

CREATE TABLE IF NOT EXISTS public.leaderboard_entries
(
    leaderboard_entry_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    leaderboard_id uuid,
    user_id uuid,
    rank integer NOT NULL,
    score integer NOT NULL,
    level integer NOT NULL,
    streak integer NOT NULL,
    change integer NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT leaderboard_entries_pkey PRIMARY KEY (leaderboard_entry_id)
);

COMMENT ON TABLE public.leaderboard_entries
    IS 'Lưu trữ các mục trong bảng xếp hạng';

CREATE TABLE IF NOT EXISTS public.leaderboards
(
    leaderboard_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    period character varying(50) COLLATE pg_catalog."default",
    tab character varying(50) COLLATE pg_catalog."default",
    snapshot_date date,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT leaderboards_pkey PRIMARY KEY (leaderboard_id)
);

COMMENT ON TABLE public.leaderboards
    IS 'Lưu trữ bảng xếp hạng';

CREATE TABLE IF NOT EXISTS public.lesson_categories
(
    lesson_category_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_category_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_categories_pkey PRIMARY KEY (lesson_category_id),
    CONSTRAINT lesson_categories_lesson_category_name_key UNIQUE (lesson_category_name)
);

COMMENT ON TABLE public.lesson_categories
    IS 'Lưu trữ các danh mục bài học';

CREATE TABLE IF NOT EXISTS public.lesson_order_in_series
(
    lesson_id uuid NOT NULL,
    lesson_series_id uuid NOT NULL,
    order_index integer NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_order_in_series_pkey PRIMARY KEY (lesson_id, lesson_series_id)
);

COMMENT ON TABLE public.lesson_order_in_series
    IS 'Lưu trữ thứ tự bài học trong chuỗi';

CREATE TABLE IF NOT EXISTS public.lesson_progress
(
    lesson_id uuid NOT NULL,
    user_id uuid NOT NULL,
    score integer NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    completed_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_progress_pkey PRIMARY KEY (lesson_id, user_id)
);

COMMENT ON TABLE public.lesson_progress
    IS 'Lưu trữ tiến độ bài học của người dùng';

CREATE TABLE IF NOT EXISTS public.lesson_progress_wrong_items
(
    lesson_id uuid NOT NULL,
    user_id uuid NOT NULL,
    lesson_question_id uuid NOT NULL,
    wrong_answer character varying(255) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_progress_wrong_items_pkey PRIMARY KEY (lesson_id, user_id, lesson_question_id)
);

COMMENT ON TABLE public.lesson_progress_wrong_items
    IS 'Lưu trữ câu trả lời sai cho bài học';

CREATE TABLE IF NOT EXISTS public.lesson_questions
(
    lesson_question_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_id uuid NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    question text COLLATE pg_catalog."default" NOT NULL,
    optiona character varying(255) COLLATE pg_catalog."default",
    optionb character varying(255) COLLATE pg_catalog."default",
    optionc character varying(255) COLLATE pg_catalog."default",
    optiond character varying(255) COLLATE pg_catalog."default",
    correct_option character varying(255) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_questions_pkey PRIMARY KEY (lesson_question_id)
);

COMMENT ON TABLE public.lesson_questions
    IS 'Lưu trữ các câu hỏi bài học';

CREATE TABLE IF NOT EXISTS public.lesson_reviews
(
    review_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_id uuid NOT NULL,
    user_id uuid NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    rating numeric(3, 1) NOT NULL,
    comment text COLLATE pg_catalog."default",
    reviewed_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_reviews_pkey PRIMARY KEY (review_id)
);

COMMENT ON TABLE public.lesson_reviews
    IS 'Lưu trữ đánh giá bài học';

CREATE TABLE IF NOT EXISTS public.lesson_series
(
    lesson_series_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_series_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_series_pkey PRIMARY KEY (lesson_series_id),
    CONSTRAINT lesson_series_lesson_series_name_key UNIQUE (lesson_series_name)
);

COMMENT ON TABLE public.lesson_series
    IS 'Lưu trữ các chuỗi bài học';

CREATE TABLE IF NOT EXISTS public.lesson_sub_category
(
    lesson_sub_category_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_sub_category_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    lesson_category_id uuid,
    language_code character varying(2) COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lesson_sub_category_pkey PRIMARY KEY (lesson_sub_category_id),
    CONSTRAINT lesson_sub_category_lesson_sub_category_name_key UNIQUE (lesson_sub_category_name)
);

COMMENT ON TABLE public.lesson_sub_category
    IS 'Lưu trữ các danh mục con của bài học';

CREATE TABLE IF NOT EXISTS public.lessons
(
    lesson_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    lesson_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    exp_reward integer NOT NULL,
    lesson_series_id uuid,
    lesson_category_id uuid,
    lesson_sub_category_id uuid,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT lessons_pkey PRIMARY KEY (lesson_id),
    CONSTRAINT lessons_lesson_name_key UNIQUE (lesson_name)
);

COMMENT ON TABLE public.lessons
    IS 'Lưu trữ các bài học';

CREATE TABLE IF NOT EXISTS public.message_reactions
(
    reaction_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    chat_message_id uuid NOT NULL,
    sent_at timestamp with time zone NOT NULL,
    user_id uuid NOT NULL,
    reaction character varying(50) COLLATE pg_catalog."default" NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT message_reactions_pkey PRIMARY KEY (reaction_id)
);

COMMENT ON TABLE public.message_reactions
    IS 'Lưu trữ phản ứng với tin nhắn';

CREATE TABLE IF NOT EXISTS public.notifications
(
    notification_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid NOT NULL,
    language_code character varying(2) COLLATE pg_catalog."default",
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content text COLLATE pg_catalog."default",
    type notification_type,
    payload jsonb,
    read boolean NOT NULL DEFAULT false,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT notifications_pkey PRIMARY KEY (notification_id)
);

COMMENT ON TABLE public.notifications
    IS 'Lưu trữ thông báo của người dùng';

CREATE TABLE IF NOT EXISTS public.permissions
(
    permission_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT permissions_pkey PRIMARY KEY (permission_id),
    CONSTRAINT permissions_name_key UNIQUE (name)
);

COMMENT ON TABLE public.permissions
    IS 'Lưu trữ quyền cho các vai trò';

CREATE TABLE IF NOT EXISTS public.refreshtokens
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid NOT NULL,
    token text COLLATE pg_catalog."default" NOT NULL,
    is_revoked boolean NOT NULL DEFAULT false,
    expires_at timestamp without time zone,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT refreshtokens_pkey PRIMARY KEY (id),
    CONSTRAINT refreshtokens_token_key UNIQUE (token)
);

COMMENT ON TABLE public.refreshtokens
    IS 'Lưu trữ các refresh token của người dùng';

CREATE TABLE IF NOT EXISTS public.role_permissions
(
    permission_id uuid NOT NULL,
    role_id uuid NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT role_permissions_pkey PRIMARY KEY (permission_id, role_id)
);

COMMENT ON TABLE public.role_permissions
    IS 'Lưu trữ quyền của vai trò';

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    role_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT roles_pkey PRIMARY KEY (role_id),
    CONSTRAINT roles_role_name_key UNIQUE (role_name)
);

COMMENT ON TABLE public.roles
    IS 'Lưu trữ vai trò cho quyền của người dùng';

CREATE TABLE IF NOT EXISTS public.room_members
(
    room_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role room_role,
    is_deleted boolean NOT NULL DEFAULT false,
    joined_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    end_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT room_members_pkey PRIMARY KEY (room_id, user_id)
);

COMMENT ON TABLE public.room_members
    IS 'Lưu trữ thành viên của phòng';

CREATE TABLE IF NOT EXISTS public.rooms
(
    room_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    room_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    creator_id uuid,
    max_members integer NOT NULL,
    purpose room_purpose,
    room_type room_type NOT NULL,
    status room_status NOT NULL DEFAULT 'active'::room_status,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT rooms_pkey PRIMARY KEY (room_id)
);

COMMENT ON TABLE public.rooms
    IS 'Lưu trữ các phòng trò chuyện để giao tiếp';

CREATE TABLE IF NOT EXISTS public.transactions
(
    transaction_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid NOT NULL,
    amount double precision NOT NULL,
    status transaction_status NOT NULL DEFAULT 'PENDING'::transaction_status,
    provider transaction_provider NOT NULL DEFAULT 'VNPAY'::transaction_provider,
    description text COLLATE pg_catalog."default",
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id)
);

COMMENT ON TABLE public.transactions
    IS 'Lưu trữ các giao dịch của người dùng';

CREATE TABLE IF NOT EXISTS public.user_badges
(
    badge_id uuid NOT NULL,
    user_id uuid NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_badges_pkey PRIMARY KEY (badge_id, user_id)
);

COMMENT ON TABLE public.user_badges
    IS 'Lưu trữ huy hiệu của người dùng';

CREATE TABLE IF NOT EXISTS public.user_fcm_tokens
(
    user_fcm_token_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id uuid,
    fcm_token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    platform varchar(20),
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_fcm_tokens_pkey PRIMARY KEY (user_fcm_token_id),
    CONSTRAINT user_fcm_tokens_fcm_token_key UNIQUE (fcm_token)
);

COMMENT ON TABLE public.user_fcm_tokens
    IS 'Lưu trữ token FCM của người dùng cho thông báo đẩy';

CREATE TABLE IF NOT EXISTS public.user_languages
(
    language_code character varying(2) COLLATE pg_catalog."default" NOT NULL,
    user_id uuid NOT NULL,
    proficiency_level proficiency_level,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_languages_pkey PRIMARY KEY (language_code, user_id)
);

COMMENT ON TABLE public.user_languages
    IS 'Lưu trữ ngôn ngữ mặc định của người dùng';

CREATE TABLE IF NOT EXISTS public.user_roles
(
    role_id uuid NOT NULL,
    user_id uuid NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_roles_pkey PRIMARY KEY (role_id, user_id)
);

COMMENT ON TABLE public.user_roles
    IS 'Lưu trữ vai trò của người dùng';

CREATE TABLE IF NOT EXISTS public.user_series_progress
(
    series_id uuid NOT NULL,
    user_id uuid NOT NULL,
    current_index integer NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    started_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    completed_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_series_progress_pkey PRIMARY KEY (series_id, user_id)
);

COMMENT ON TABLE public.user_series_progress
    IS 'Lưu trữ tiến độ chuỗi bài học của người dùng';

CREATE TABLE IF NOT EXISTS public.users
(
    user_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fullname character varying(255) COLLATE pg_catalog."default",
    nickname character varying(50) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    avatar_url character varying(255) COLLATE pg_catalog."default",
    character3d_id uuid,
    badge_id uuid,
    native_language_code character varying(2) COLLATE pg_catalog."default",
    auth_provider auth_provider,
    country country,
    level integer NOT NULL DEFAULT 1,
    score integer NOT NULL DEFAULT 0,
    streak integer NOT NULL DEFAULT 0,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_phone_key UNIQUE (phone)
);

COMMENT ON TABLE public.users
    IS 'Lưu trữ thông tin tài khoản người dùng';

CREATE TABLE IF NOT EXISTS public.video_call_participants
(
    video_call_id uuid NOT NULL,
    user_id uuid NOT NULL,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT video_call_participants_pkey PRIMARY KEY (video_call_id, user_id)
);

COMMENT ON TABLE public.video_call_participants
    IS 'Lưu trữ người tham gia cuộc gọi video';

CREATE TABLE IF NOT EXISTS public.video_calls
(
    video_call_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    room_id uuid,
    caller_id uuid,
    callee_id uuid,
    video_call_type video_call_type,
    status video_call_status NOT NULL DEFAULT 'initiated'::video_call_status,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    duration interval GENERATED ALWAYS AS ((end_time - start_time)) STORED,
    quality_metrics jsonb,
    is_deleted boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT video_calls_pkey PRIMARY KEY (video_call_id)
);

COMMENT ON TABLE public.video_calls
    IS 'Lưu trữ các cuộc gọi video';

ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT fk_chat_messages_room FOREIGN KEY (room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.chat_messages
    ADD CONSTRAINT fk_chat_messages_sender FOREIGN KEY (sender_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.couples
    ADD CONSTRAINT fk_couples_user1 FOREIGN KEY (user1_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.couples
    ADD CONSTRAINT fk_couples_user2 FOREIGN KEY (user2_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.course_discounts
    ADD CONSTRAINT fk_course_discounts_course FOREIGN KEY (course_id)
    REFERENCES public.courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.course_enrollments
    ADD CONSTRAINT fk_course_enrollments_course FOREIGN KEY (course_id)
    REFERENCES public.courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.course_enrollments
    ADD CONSTRAINT fk_course_enrollments_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.course_reviews
    ADD CONSTRAINT fk_course_reviews_course FOREIGN KEY (course_id)
    REFERENCES public.courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.course_reviews
    ADD CONSTRAINT fk_course_reviews_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.course_reviews
    ADD CONSTRAINT fk_course_reviews_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.courses
    ADD CONSTRAINT fk_course_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.friendships
    ADD CONSTRAINT fk_friendships_user1 FOREIGN KEY (user1_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.friendships
    ADD CONSTRAINT fk_friendships_user2 FOREIGN KEY (user2_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_answers
    ADD CONSTRAINT fk_group_answers_question FOREIGN KEY (lesson_question_id)
    REFERENCES public.lesson_questions (lesson_question_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_answers
    ADD CONSTRAINT fk_group_answers_session FOREIGN KEY (group_session_id)
    REFERENCES public.group_sessions (group_session_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_answers
    ADD CONSTRAINT fk_group_answers_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fk_group_sessions_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fk_group_sessions_room FOREIGN KEY (room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.group_sessions
    ADD CONSTRAINT fk_group_sessions_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.leaderboard_entries
    ADD CONSTRAINT fk_leaderboard_entries_leaderboard FOREIGN KEY (leaderboard_id)
    REFERENCES public.leaderboards (leaderboard_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.leaderboard_entries
    ADD CONSTRAINT fk_leaderboard_entries_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_categories
    ADD CONSTRAINT fk_lesson_category_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lesson_order_in_series
    ADD CONSTRAINT fk_lesson_order_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_order_in_series
    ADD CONSTRAINT fk_lesson_order_series FOREIGN KEY (lesson_series_id)
    REFERENCES public.lesson_series (lesson_series_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_progress
    ADD CONSTRAINT fk_lesson_progress_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_progress
    ADD CONSTRAINT fk_lesson_progress_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_progress_wrong_items
    ADD CONSTRAINT fk_lesson_progress_wrong_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_progress_wrong_items
    ADD CONSTRAINT fk_lesson_progress_wrong_question FOREIGN KEY (lesson_question_id)
    REFERENCES public.lesson_questions (lesson_question_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_progress_wrong_items
    ADD CONSTRAINT fk_lesson_progress_wrong_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_questions
    ADD CONSTRAINT fk_lesson_questions_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lesson_questions
    ADD CONSTRAINT fk_lesson_questions_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_reviews
    ADD CONSTRAINT fk_lesson_reviews_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lesson_reviews
    ADD CONSTRAINT fk_lesson_reviews_lesson FOREIGN KEY (lesson_id)
    REFERENCES public.lessons (lesson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_reviews
    ADD CONSTRAINT fk_lesson_reviews_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lesson_series
    ADD CONSTRAINT fk_lesson_series_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lesson_sub_category
    ADD CONSTRAINT fk_sub_category_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lesson_sub_category
    ADD CONSTRAINT fk_sub_category_to_category FOREIGN KEY (lesson_category_id)
    REFERENCES public.lesson_categories (lesson_category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fk_lesson_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fk_lesson_to_category FOREIGN KEY (lesson_category_id)
    REFERENCES public.lesson_categories (lesson_category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fk_lesson_to_series FOREIGN KEY (lesson_series_id)
    REFERENCES public.lesson_series (lesson_series_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT fk_lesson_to_sub_category FOREIGN KEY (lesson_sub_category_id)
    REFERENCES public.lesson_sub_category (lesson_sub_category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.message_reactions
    ADD CONSTRAINT fk_message_reactions_message FOREIGN KEY (chat_message_id, sent_at)
    REFERENCES public.chat_messages (chat_message_id, sent_at) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.message_reactions
    ADD CONSTRAINT fk_message_reactions_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT fk_notifications_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.notifications
    ADD CONSTRAINT fk_notifications_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.refreshtokens
    ADD CONSTRAINT fk_refreshtokens_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT fk_role_permissions_permission FOREIGN KEY (permission_id)
    REFERENCES public.permissions (permission_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.role_permissions
    ADD CONSTRAINT fk_role_permissions_role FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.room_members
    ADD CONSTRAINT fk_room_members_room FOREIGN KEY (room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.room_members
    ADD CONSTRAINT fk_room_members_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rooms
    ADD CONSTRAINT fk_room_creator FOREIGN KEY (creator_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fk_transactions_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_badges
    ADD CONSTRAINT fk_user_badges_badge FOREIGN KEY (badge_id)
    REFERENCES public.badges (badge_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_badges
    ADD CONSTRAINT fk_user_badges_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_fcm_tokens
    ADD CONSTRAINT fk_user_fcm_tokens_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_languages
    ADD CONSTRAINT fk_user_languages_language FOREIGN KEY (language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_languages
    ADD CONSTRAINT fk_user_languages_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fk_user_roles_role FOREIGN KEY (role_id)
    REFERENCES public.roles (role_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_roles
    ADD CONSTRAINT fk_user_roles_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_series_progress
    ADD CONSTRAINT fk_user_series_progress_series FOREIGN KEY (series_id)
    REFERENCES public.lesson_series (lesson_series_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_series_progress
    ADD CONSTRAINT fk_user_series_progress_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_user_badge FOREIGN KEY (badge_id)
    REFERENCES public.badges (badge_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_user_character FOREIGN KEY (character3d_id)
    REFERENCES public.character3ds (character3d_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_user_native_language FOREIGN KEY (native_language_code)
    REFERENCES public.languages (language_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.video_call_participants
    ADD CONSTRAINT fk_video_call_participants_call FOREIGN KEY (video_call_id)
    REFERENCES public.video_calls (video_call_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.video_call_participants
    ADD CONSTRAINT fk_video_call_participants_user FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.video_calls
    ADD CONSTRAINT fk_video_calls_callee FOREIGN KEY (callee_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.video_calls
    ADD CONSTRAINT fk_video_calls_caller FOREIGN KEY (caller_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.video_calls
    ADD CONSTRAINT fk_video_calls_room FOREIGN KEY (room_id)
    REFERENCES public.rooms (room_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE public.lessons
    ADD COLUMN course_id uuid;

ALTER TABLE public.lessons
    ADD CONSTRAINT fk_lesson_to_course FOREIGN KEY (course_id)
    REFERENCES public.courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

COMMENT ON TABLE public.lessons
    IS 'Lưu trữ các bài học, mỗi bài học có thể thuộc về một khóa học (course), chuỗi bài học (series), danh mục hoặc danh mục con';

END;